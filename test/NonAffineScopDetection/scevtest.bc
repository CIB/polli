; ModuleID = 'scevtest.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1

define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %A = alloca [1024 x i32], align 16
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i12 = alloca i32, align 4
  %i23 = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 10, i32* %n, align 4
  %call = call i32 @rand() #3
  %rem = srem i32 %call, 100
  store i32 %rem, i32* %m, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %1 = load i32* %n, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %3 = load i32* %i, align 4
  %add = add nsw i32 %2, %3
  %4 = load i32* %i, align 4
  %5 = load i32* %i, align 4
  %mul = mul nsw i32 %4, %5
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds [1024 x i32]* %A, i32 0, i64 %idxprom
  store i32 %add, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i1, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc9, %for.end
  %7 = load i32* %i1, align 4
  %8 = load i32* %n, align 4
  %cmp3 = icmp sle i32 %7, %8
  br i1 %cmp3, label %for.body4, label %for.end11

for.body4:                                        ; preds = %for.cond2
  %9 = load i32* %i1, align 4
  %10 = load i32* %i1, align 4
  %add5 = add nsw i32 %9, %10
  %11 = load i32* %m, align 4
  %12 = load i32* %i1, align 4
  %mul6 = mul nsw i32 %11, %12
  %idxprom7 = sext i32 %mul6 to i64
  %arrayidx8 = getelementptr inbounds [1024 x i32]* %A, i32 0, i64 %idxprom7
  store i32 %add5, i32* %arrayidx8, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.body4
  %13 = load i32* %i1, align 4
  %inc10 = add nsw i32 %13, 1
  store i32 %inc10, i32* %i1, align 4
  br label %for.cond2

for.end11:                                        ; preds = %for.cond2
  store i32 0, i32* %i12, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc20, %for.end11
  %14 = load i32* %i12, align 4
  %15 = load i32* %n, align 4
  %cmp14 = icmp sle i32 %14, %15
  br i1 %cmp14, label %for.body15, label %for.end22

for.body15:                                       ; preds = %for.cond13
  %16 = load i32* %i12, align 4
  %17 = load i32* %i12, align 4
  %add16 = add nsw i32 %16, %17
  %18 = load i32* %m, align 4
  %19 = load i32* %i12, align 4
  %add17 = add nsw i32 %18, %19
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds [1024 x i32]* %A, i32 0, i64 %idxprom18
  store i32 %add16, i32* %arrayidx19, align 4
  br label %for.inc20

for.inc20:                                        ; preds = %for.body15
  %20 = load i32* %i12, align 4
  %inc21 = add nsw i32 %20, 1
  store i32 %inc21, i32* %i12, align 4
  br label %for.cond13

for.end22:                                        ; preds = %for.cond13
  store i32 0, i32* %i23, align 4
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc31, %for.end22
  %21 = load i32* %i23, align 4
  %22 = load i32* %n, align 4
  %cmp25 = icmp sle i32 %21, %22
  br i1 %cmp25, label %for.body26, label %for.end33

for.body26:                                       ; preds = %for.cond24
  %23 = load i32* %i23, align 4
  %24 = load i32* %i23, align 4
  %mul27 = mul nsw i32 %23, %24
  %idxprom28 = sext i32 %mul27 to i64
  %arrayidx29 = getelementptr inbounds [1024 x i32]* %A, i32 0, i64 %idxprom28
  %25 = load i32* %arrayidx29, align 4
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i32 %25)
  br label %for.inc31

for.inc31:                                        ; preds = %for.body26
  %26 = load i32* %i23, align 4
  %inc32 = add nsw i32 %26, 1
  store i32 %inc32, i32* %i23, align 4
  br label %for.cond24

for.end33:                                        ; preds = %for.cond24
  %arrayidx34 = getelementptr inbounds [1024 x i32]* %A, i32 0, i64 2
  %27 = load i32* %arrayidx34, align 4
  ret i32 %27
}

declare i32 @rand() #1

declare i32 @printf(i8*, ...) #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
